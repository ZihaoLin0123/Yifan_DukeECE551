Grading at 11/23/2020:07:56:52.178960
For commit ID c3afb245436f09f7deb0c898d1a5340bf659a4ba
Grading at Mon Nov 23 15:56:48 CST 2020
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind was clean (no errors, no memory leaks)
Checking output:
Your file matched the expected output
Testcase passed 
Testcase 2
-----------------------
  - Valgrind was clean (no errors, no memory leaks)
Checking output:
Your file matched the expected output
Testcase passed 
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==109116== Memcheck, a memory error detector
==109116== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==109116== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==109116== Command: ./testFreq /usr/share/dict/words
==109116== Parent PID: 109115
==109116== 
==109116== Invalid read of size 8
==109116==    at 0x1093DF: readFrequencies(char const*) (readFreq.cpp:34)
==109116==    by 0x109077: main (testFreq.cpp:10)
==109116==  Address 0x805b81d48 is not stack'd, malloc'd or (recently) free'd
==109116== 
==109116== 
==109116== Process terminating with default action of signal 11 (SIGSEGV)
==109116==  Access not within mapped region at address 0x805B81D48
==109116==    at 0x1093DF: readFrequencies(char const*) (readFreq.cpp:34)
==109116==    by 0x109077: main (testFreq.cpp:10)
==109116==  If you believe this happened as a result of a stack
==109116==  overflow in your program's main thread (unlikely but
==109116==  possible), you can try to increase the size of the
==109116==  main thread stack using the --main-stacksize= flag.
==109116==  The main thread stack size used in this run was 8388608.
==109116== 
==109116== HEAP SUMMARY:
==109116==     in use at exit: 10,800 bytes in 3 blocks
==109116==   total heap usage: 4 allocs, 1 frees, 83,504 bytes allocated
==109116== 
==109116== LEAK SUMMARY:
==109116==    definitely lost: 0 bytes in 0 blocks
==109116==    indirectly lost: 0 bytes in 0 blocks
==109116==      possibly lost: 0 bytes in 0 blocks
==109116==    still reachable: 10,800 bytes in 3 blocks
==109116==         suppressed: 0 bytes in 0 blocks
==109116== Reachable blocks (those to which a pointer was found) are not shown.
==109116== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==109116== 
==109116== For counts of detected and suppressed errors, rerun with: -v
==109116== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind was clean (no errors, no memory leaks)
Checking output:
Your file matched the expected output
Testcase passed 

Overall Grade: C
