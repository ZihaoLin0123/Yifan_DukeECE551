Grading at 11/23/2020:07:54:44.434773
For commit ID ef8f6533501ddc20528600959b5ede58b8298d96
Grading at Mon Nov 23 15:54:40 CST 2020
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==105152== Memcheck, a memory error detector
==105152== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105152== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==105152== Command: ./testFreq /etc/issue
==105152== Parent PID: 105151
==105152== 
==105152== Use of uninitialised value of size 8
==105152==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105152==    by 0x109077: main (testFreq.cpp:10)
==105152== 
==105152== Conditional jump or move depends on uninitialised value(s)
==105152==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105152==    by 0x109077: main (testFreq.cpp:10)
==105152== 
==105152== Conditional jump or move depends on uninitialised value(s)
==105152==    at 0x1090CE: main (testFreq.cpp:13)
==105152== 
==105152== Use of uninitialised value of size 8
==105152==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x109116: main (testFreq.cpp:17)
==105152== 
==105152== Conditional jump or move depends on uninitialised value(s)
==105152==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105152==    by 0x109116: main (testFreq.cpp:17)
==105152== 
==105152== 
==105152== HEAP SUMMARY:
==105152==     in use at exit: 0 bytes in 0 blocks
==105152==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==105152== 
==105152== All heap blocks were freed -- no leaks are possible
==105152== 
==105152== For counts of detected and suppressed errors, rerun with: -v
==105152== Use --track-origins=yes to see where uninitialised values come from
==105152== ERROR SUMMARY: 294 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==105156== Memcheck, a memory error detector
==105156== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105156== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==105156== Command: ./testFreq /etc/services
==105156== Parent PID: 105155
==105156== 
==105156== Use of uninitialised value of size 8
==105156==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105156==    by 0x109077: main (testFreq.cpp:10)
==105156== 
==105156== Conditional jump or move depends on uninitialised value(s)
==105156==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105156==    by 0x109077: main (testFreq.cpp:10)
==105156== 
==105156== Conditional jump or move depends on uninitialised value(s)
==105156==    at 0x1090CE: main (testFreq.cpp:13)
==105156== 
==105156== Use of uninitialised value of size 8
==105156==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x109116: main (testFreq.cpp:17)
==105156== 
==105156== Conditional jump or move depends on uninitialised value(s)
==105156==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105156==    by 0x109116: main (testFreq.cpp:17)
==105156== 
==105156== 
==105156== HEAP SUMMARY:
==105156==     in use at exit: 0 bytes in 0 blocks
==105156==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==105156== 
==105156== All heap blocks were freed -- no leaks are possible
==105156== 
==105156== For counts of detected and suppressed errors, rerun with: -v
==105156== Use --track-origins=yes to see where uninitialised values come from
==105156== ERROR SUMMARY: 654 errors from 5 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==105181== Memcheck, a memory error detector
==105181== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105181== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==105181== Command: ./testFreq /usr/share/dict/words
==105181== Parent PID: 105180
==105181== 
==105181== Use of uninitialised value of size 8
==105181==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105181==    by 0x109077: main (testFreq.cpp:10)
==105181== 
==105181== Conditional jump or move depends on uninitialised value(s)
==105181==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105181==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105181==    by 0x109077: main (testFreq.cpp:10)
==105181== 
==105181== Invalid read of size 8
==105181==    at 0x1093EC: readFrequencies(char const*) (readFreq.cpp:35)
==105181==    by 0x109077: main (testFreq.cpp:10)
==105181==  Address 0x805b81d48 is not stack'd, malloc'd or (recently) free'd
==105181== 
==105181== 
==105181== Process terminating with default action of signal 11 (SIGSEGV)
==105181==  Access not within mapped region at address 0x805B81D48
==105181==    at 0x1093EC: readFrequencies(char const*) (readFreq.cpp:35)
==105181==    by 0x109077: main (testFreq.cpp:10)
==105181==  If you believe this happened as a result of a stack
==105181==  overflow in your program's main thread (unlikely but
==105181==  possible), you can try to increase the size of the
==105181==  main thread stack using the --main-stacksize= flag.
==105181==  The main thread stack size used in this run was 8388608.
==105181== 
==105181== HEAP SUMMARY:
==105181==     in use at exit: 10,800 bytes in 3 blocks
==105181==   total heap usage: 5 allocs, 2 frees, 87,600 bytes allocated
==105181== 
==105181== LEAK SUMMARY:
==105181==    definitely lost: 0 bytes in 0 blocks
==105181==    indirectly lost: 0 bytes in 0 blocks
==105181==      possibly lost: 0 bytes in 0 blocks
==105181==    still reachable: 10,800 bytes in 3 blocks
==105181==         suppressed: 0 bytes in 0 blocks
==105181== Reachable blocks (those to which a pointer was found) are not shown.
==105181== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==105181== 
==105181== For counts of detected and suppressed errors, rerun with: -v
==105181== Use --track-origins=yes to see where uninitialised values come from
==105181== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==105216== Memcheck, a memory error detector
==105216== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105216== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==105216== Command: ./testFreq /usr/share/dict/cracklib-small
==105216== Parent PID: 105215
==105216== 
==105216== Use of uninitialised value of size 8
==105216==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105216==    by 0x109077: main (testFreq.cpp:10)
==105216== 
==105216== Conditional jump or move depends on uninitialised value(s)
==105216==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x109386: readFrequencies(char const*) (readFreq.cpp:32)
==105216==    by 0x109077: main (testFreq.cpp:10)
==105216== 
==105216== Conditional jump or move depends on uninitialised value(s)
==105216==    at 0x1090CE: main (testFreq.cpp:13)
==105216== 
==105216== Use of uninitialised value of size 8
==105216==    at 0x4F4562E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x109116: main (testFreq.cpp:17)
==105216== 
==105216== Conditional jump or move depends on uninitialised value(s)
==105216==    at 0x4F4563B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F46034: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x4F522B4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==105216==    by 0x109116: main (testFreq.cpp:17)
==105216== 
==105216== 
==105216== HEAP SUMMARY:
==105216==     in use at exit: 0 bytes in 0 blocks
==105216==   total heap usage: 5 allocs, 5 frees, 87,600 bytes allocated
==105216== 
==105216== All heap blocks were freed -- no leaks are possible
==105216== 
==105216== For counts of detected and suppressed errors, rerun with: -v
==105216== Use --track-origins=yes to see where uninitialised values come from
==105216== ERROR SUMMARY: 534 errors from 5 contexts (suppressed: 0 from 0)

Overall Grade: F
